{"ast":null,"code":"import _classCallCheck from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{changeFilterAction}from'../actions/index';import{FilterContainer,StyledText}from'./styled-components';var filterOptions=['All','Action','Biography','History','Horror','Kids','Learning','Sci-Fi'];var CategoryFilter=/*#__PURE__*/function(_React$Component){_inherits(CategoryFilter,_React$Component);function CategoryFilter(){var _getPrototypeOf2;var _this;_classCallCheck(this,CategoryFilter);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(CategoryFilter)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleFilterChange=function(e){var handleFiltering=_this.props.handleFiltering;handleFiltering(e.target.value);};return _this;}_createClass(CategoryFilter,[{key:\"render\",value:function render(){return React.createElement(FilterContainer,null,React.createElement(StyledText,{size:\"small\"},\"Filter By:\"),React.createElement(\"select\",{onChange:this.handleFilterChange},filterOptions.map(function(filter){return React.createElement(\"option\",{key:filter,value:filter},filter);})));}}]);return CategoryFilter;}(React.Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{handleFiltering:function handleFiltering(filter){dispatch(changeFilterAction(filter));}};};CategoryFilter=connect(null,mapDispatchToProps)(CategoryFilter);export default CategoryFilter;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/client/src/components/category-filter.js"],"names":["React","connect","changeFilterAction","FilterContainer","StyledText","filterOptions","CategoryFilter","handleFilterChange","e","handleFiltering","props","target","value","map","filter","Component","mapDispatchToProps","dispatch"],"mappings":"qsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,kBAAnC,CACA,OAASC,eAAT,CAA0BC,UAA1B,KAA4C,qBAA5C,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAAC,KAAD,CAAQ,QAAR,CAAkB,WAAlB,CAA+B,SAA/B,CAA0C,QAA1C,CAAoD,MAApD,CAA4D,UAA5D,CAAwE,QAAxE,CAAtB,C,GAEMC,CAAAA,c,2aACJC,kB,CAAqB,SAACC,CAAD,CAAO,IAClBC,CAAAA,eADkB,CACE,MAAKC,KADP,CAClBD,eADkB,CAE1BA,eAAe,CAACD,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf,CACD,C,iFAEQ,CACP,MACE,qBAAC,eAAD,MACE,oBAAC,UAAD,EACE,IAAI,CAAC,OADP,eADF,CAKE,8BAAQ,QAAQ,CAAE,KAAKL,kBAAvB,EACGF,aAAa,CAACQ,GAAd,CAAkB,SAACC,MAAD,QACjB,+BAAQ,GAAG,CAAEA,MAAb,CAAqB,KAAK,CAAEA,MAA5B,EAAqCA,MAArC,CADiB,EAAlB,CADH,CALF,CADF,CAaD,C,4BApB0Bd,KAAK,CAACe,S,EAuBnC,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCR,eAAe,CAAE,yBAACK,MAAD,CAAY,CAC3BG,QAAQ,CAACf,kBAAkB,CAACY,MAAD,CAAnB,CAAR,CACD,CAHuC,CAAf,EAA3B,CAMAR,cAAc,CAAGL,OAAO,CAAC,IAAD,CAAOe,kBAAP,CAAP,CAAkCV,cAAlC,CAAjB,CAEA,cAAeA,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilterAction } from '../actions/index';\nimport { FilterContainer, StyledText } from './styled-components';\n\nconst filterOptions = ['All', 'Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n\nclass CategoryFilter extends React.Component {\n  handleFilterChange = (e) => {\n    const { handleFiltering } = this.props;\n    handleFiltering(e.target.value);\n  }\n\n  render() {\n    return (\n      <FilterContainer>\n        <StyledText\n          size=\"small\">\n          Filter By:\n        </StyledText>\n        <select onChange={this.handleFilterChange}>\n          {filterOptions.map((filter) => (\n            <option key={filter} value={filter}>{filter}</option>\n          ))}\n        </select>\n      </FilterContainer>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleFiltering: (filter) => {\n    dispatch(changeFilterAction(filter));\n  },\n});\n\nCategoryFilter = connect(null, mapDispatchToProps)(CategoryFilter);\n\nexport default CategoryFilter;\n"]},"metadata":{},"sourceType":"module"}