{"ast":null,"code":"var _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/components/book-list.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Book from './book';\n\nclass BookList extends React.Component {\n  componentDidMount() {\n    const store = this.context.store;\n    this.unsubscribe = store.dispatch(e => {\n      e.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const store = this.context.store;\n\n    const _store$getState = store.getState(),\n          books = _store$getState.books;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"BookID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Category\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, books.length > 0 ? books.map(book => {\n      return React.createElement(Book, {\n        item: book,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Empty List\"))));\n  }\n\n}\n\nBookList.contextType = {\n  store: PropTypes.object.isRequired\n};\nexport default BookList;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/components/book-list.js"],"names":["React","PropTypes","Book","BookList","Component","componentDidMount","store","context","unsubscribe","dispatch","e","forceUpdate","componentWillUnmount","render","getState","books","length","map","book","contextType","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,KADU,GACA,KAAKC,OADL,CACVD,KADU;AAElB,SAAKE,WAAL,GAAmBF,KAAK,CAACG,QAAN,CAAgBC,CAAD,IAAO;AACvCA,MAAAA,CAAC,CAACC,WAAF;AACD,KAFkB,CAAnB;AAGD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,WAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AAAA,UACCP,KADD,GACW,KAAKC,OADhB,CACCD,KADD;;AAAA,4BAEWA,KAAK,CAACQ,QAAN,EAFX;AAAA,UAECC,KAFD,mBAECA,KAFD;;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmBD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACtC,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFmB,CAAnB,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHP,CANF,CADF,CADF;AAgBD;;AAhCoC;;AAmCvCf,QAAQ,CAACgB,WAAT,GAAuB;AACrBb,EAAAA,KAAK,EAAEL,SAAS,CAACmB,MAAV,CAAiBC;AADH,CAAvB;AAIA,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Book from './book';\n\nclass BookList extends React.Component {\n\n  componentDidMount() {\n    const { store } = this.context;\n    this.unsubscribe = store.dispatch((e) => {\n      e.forceUpdate();\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { store } = this.context;\n    const { books } = store.getState()\n    return (\n      <div>\n        <table>\n          <thead>\n            <th>BookID</th>\n            <th>Title</th>\n            <th>Category</th>\n          </thead>\n          <tbody>\n            {books.length > 0 ? books.map((book) => {\n              return <Book item={book} />\n            }) : <tr>Empty List</tr>}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nBookList.contextType = {\n  store: PropTypes.object.isRequired\n}\n\nexport default BookList"]},"metadata":{},"sourceType":"module"}