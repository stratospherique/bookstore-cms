{"ast":null,"code":"var _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/components/book.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { removeBookAction } from '../actions/index';\n\nlet Book = ({\n  item,\n  handleRemoveBook\n}) => {\n  const book = item;\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, book.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, book.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, book.category), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      handleRemoveBook(book);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Remove\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleRemoveBook: book => {\n    dispatch(removeBookAction(book));\n  }\n});\n\nBook = connect(null, mapDispatchToProps)(Book);\nexport default Book;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/components/book.js"],"names":["React","connect","removeBookAction","Book","item","handleRemoveBook","book","id","title","category","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,IAAIC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAgC;AACzC,QAAMC,IAAI,GAAGF,IAAb;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,IAAI,CAACC,EAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,QAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAQ,IAAA,OAAO,EAAE,MAAM;AACzBJ,MAAAA,gBAAgB,CAACC,IAAD,CAAhB;AACD,KAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,CAJF,CADF;AAUD,CAZD;;AAcA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,gBAAgB,EAAGC,IAAD,IAAU;AAC1BK,IAAAA,QAAQ,CAACT,gBAAgB,CAACI,IAAD,CAAjB,CAAR;AACD;AAHuC,CAAf,CAA3B;;AAMAH,IAAI,GAAGF,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCP,IAAlC,CAAP;AAEA,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeBookAction } from '../actions/index';\n\nlet Book = ({ item, handleRemoveBook }) => {\n  const book = item;\n  return (\n    <tr>\n      <td>{book.id}</td>\n      <td>{book.title}</td>\n      <td>{book.category}</td>\n      <td><button onClick={() => {\n        handleRemoveBook(book)\n      }}>Remove</button></td>\n    </tr>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleRemoveBook: (book) => {\n    dispatch(removeBookAction(book));\n  }\n});\n\nBook = connect(null, mapDispatchToProps)(Book);\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}