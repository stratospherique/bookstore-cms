{"ast":null,"code":"import _defineProperty from \"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/client/src/components/book-form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { creatBookAction } from '../actions/index';\nimport { StyledText, FormContainer, Button } from './styled-components';\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 4;\n\nclass BookForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      const handleAdding = this.props.handleAdding;\n      handleAdding(_objectSpread({\n        id: identifier\n      }, this.state));\n      identifier += 1;\n      this.setState({\n        title: '',\n        author: '',\n        category: 'Action'\n      });\n      e.target.reset();\n    };\n\n    this.handleChange = e => {\n      e.persist();\n      const target = e.target;\n\n      switch (target.localName) {\n        case 'input':\n          this.setState(state => ({\n            title: target.value,\n            category: state.category\n          }));\n          break;\n\n        default:\n          this.setState(state => ({\n            title: state.title,\n            category: target.value\n          }));\n          break;\n      }\n    };\n\n    this.state = {\n      title: '',\n      author: '',\n      category: 'Action'\n    };\n  }\n\n  render() {\n    const handleChange = this.handleChange,\n          _this$state = this.state,\n          title = _this$state.title,\n          category = _this$state.category;\n    return React.createElement(FormContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(StyledText, {\n      size: \"big\",\n      color: \"#3c6382\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Add a Book\"), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: handleChange,\n      type: \"text\",\n      className: \"title\",\n      value: title,\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"category\",\n      className: \"ctg\",\n      onChange: handleChange,\n      value: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, categories.map(item => React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, item))), React.createElement(Button, {\n      type: \"submit\",\n      text: \"Submit\",\n      size: \"big\",\n      color: \"#fff\",\n      bgColor: \"#6a89cc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })));\n  }\n\n} // connect bookForm component to dispatch\n\n\nconst mapDispatchToProps = dispatch => ({\n  handleAdding: book => {\n    axios.post('api/v1/books', {\n      book: {\n        title: book.title,\n        author: book.author,\n        category: book.category\n      }\n    }).then(response => {\n      console.log(response);\n    }); //dispatch(creatBookAction(book));\n  }\n});\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\nexport default BookForm;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/client/src/components/book-form.js"],"names":["React","connect","axios","creatBookAction","StyledText","FormContainer","Button","categories","identifier","BookForm","Component","constructor","props","handleFormSubmit","e","preventDefault","handleAdding","id","state","setState","title","author","category","target","reset","handleChange","persist","localName","value","render","map","item","mapDispatchToProps","dispatch","book","post","then","response","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { creatBookAction } from '../actions/index';\nimport { StyledText, FormContainer, Button } from './styled-components';\n\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 4;\n\nclass BookForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      author: '',\n      category: 'Action',\n    };\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const { handleAdding } = this.props;\n    handleAdding({ id: identifier, ...this.state });\n    identifier += 1;\n    this.setState({\n      title: '',\n      author: '',\n      category: 'Action',\n    });\n    e.target.reset();\n  }\n\n  handleChange = (e) => {\n    e.persist();\n    const { target } = e;\n    switch (target.localName) {\n      case 'input':\n        this.setState((state) => ({\n          title: target.value,\n          category: state.category,\n        }));\n        break;\n      default:\n        this.setState((state) => ({\n          title: state.title,\n          category: target.value,\n        }));\n        break;\n    }\n  }\n\n  render() {\n    const { handleChange, state: { title, category } } = this;\n    return (\n      <FormContainer>\n        <StyledText\n          size=\"big\"\n          color=\"#3c6382\"\n        >\n          Add a Book\n        </StyledText>\n        <form onSubmit={this.handleFormSubmit}>\n          <input onChange={handleChange} type=\"text\" className=\"title\" value={title} placeholder=\"Title\" />\n          <select name=\"category\" className=\"ctg\" onChange={handleChange} value={category}>\n            {categories.map((item) => <option key={item} value={item}>{item}</option>)}\n          </select>\n          <Button\n            type=\"submit\"\n            text=\"Submit\"\n            size=\"big\"\n            color=\"#fff\"\n            bgColor=\"#6a89cc\" />\n        </form>\n      </FormContainer>\n    );\n  }\n}\n\n// connect bookForm component to dispatch\nconst mapDispatchToProps = (dispatch) => ({\n  handleAdding: (book) => {\n    axios.post('api/v1/books', { book: { title: book.title, author: book.author, category: book.category } })\n      .then(response => {\n        console.log(response)\n      })\n    //dispatch(creatBookAction(book));\n  },\n});\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}