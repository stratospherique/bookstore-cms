{"ast":null,"code":"var _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/components/book-form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 0;\n\nclass BookForm extends React.Component {\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const book = {\n      id: identifier,\n      title: this.titleInput.value,\n      category: categories[this.categoryValue.options.selectedIndex]\n    };\n    identifier++;\n    this.props.handleAdding(book);\n    this.titleInput.value = '';\n    this.categoryValue.options.selectedIndex = 0;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Book Title\"), React.createElement(\"input\", {\n      ref: node => {\n        this.titleInput = node;\n      },\n      type: \"text\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ctg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Book Title\"), React.createElement(\"select\", {\n      name: \"category\",\n      id: \"ctg\",\n      ref: node => {\n        this.categoryValue = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, categories.map((item, index) => React.createElement(\"option\", {\n      key: index,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, item)))), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" Submit \"));\n  }\n\n} // connect bookForm component to dispatch\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleAdding: book => {\n      dispatch(actions.creatBookAction(book));\n    }\n  };\n};\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\nexport default BookForm;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/components/book-form.js"],"names":["React","connect","actions","categories","identifier","BookForm","Component","handleFormSubmit","e","preventDefault","book","id","title","titleInput","value","category","categoryValue","options","selectedIndex","props","handleAdding","render","node","map","item","index","mapDispatchToProps","dispatch","creatBookAction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,MAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,EAAmC,QAAnC,EAA6C,MAA7C,EAAqD,UAArD,EAAiE,QAAjE,CAAnB;AACA,IAAIC,UAAU,GAAG,CAAjB;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACrCC,EAAAA,gBAAgB,CAACC,CAAD,EAAI;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACXC,MAAAA,EAAE,EAAEP,UADO;AAEXQ,MAAAA,KAAK,EAAE,KAAKC,UAAL,CAAgBC,KAFZ;AAGXC,MAAAA,QAAQ,EAAEZ,UAAU,CAAC,KAAKa,aAAL,CAAmBC,OAAnB,CAA2BC,aAA5B;AAHT,KAAb;AAKAd,IAAAA,UAAU;AACV,SAAKe,KAAL,CAAWC,YAAX,CAAwBV,IAAxB;AACA,SAAKG,UAAL,CAAgBC,KAAhB,GAAwB,EAAxB;AACA,SAAKE,aAAL,CAAmBC,OAAnB,CAA2BC,aAA3B,GAA2C,CAA3C;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAO,MAAA,GAAG,EAAGC,IAAD,IAAU;AAAE,aAAKT,UAAL,GAAkBS,IAAlB;AAAyB,OAAjD;AAAmD,MAAA,IAAI,EAAC,MAAxD;AAA+D,MAAA,EAAE,EAAC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,EAAE,EAAC,KAA3B;AAAiC,MAAA,GAAG,EAAEA,IAAI,IAAI;AAAE,aAAKN,aAAL,GAAqBM,IAArB;AAA2B,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,UAAU,CAACoB,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAED,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,IAAlC,CAAhC,CADH,CAFF,CALF,EAWE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKjB,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,CADF;AAeD;;AA/BoC,C,CAmCvC;;;AACA,MAAMmB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLP,IAAAA,YAAY,EAAGV,IAAD,IAAU;AACtBiB,MAAAA,QAAQ,CAACzB,OAAO,CAAC0B,eAAR,CAAwBlB,IAAxB,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQAL,QAAQ,GAAGJ,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCrB,QAAlC,CAAX;AAEA,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 0;\n\nclass BookForm extends React.Component {\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const book = {\n      id: identifier,\n      title: this.titleInput.value,\n      category: categories[this.categoryValue.options.selectedIndex],\n    };\n    identifier++;\n    this.props.handleAdding(book);\n    this.titleInput.value = '';\n    this.categoryValue.options.selectedIndex = 0;\n  }\n\n  render() {\n\n    return (\n      <form>\n        <div>\n          <label htmlFor=\"title\">Book Title</label>\n          <input ref={(node) => { this.titleInput = node; }} type=\"text\" id=\"title\" />\n        </div>\n        <div>\n          <label htmlFor=\"ctg\">Book Title</label>\n          <select name=\"category\" id=\"ctg\" ref={node => { this.categoryValue = node }}>\n            {categories.map((item, index) => <option key={index} value={item}>{item}</option>)}\n          </select>\n        </div>\n        <button type=\"submit\" onClick={this.handleFormSubmit}> Submit </button>\n      </form>\n    )\n  }\n\n}\n\n// connect bookForm component to dispatch\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleAdding: (book) => {\n      dispatch(actions.creatBookAction(book));\n    }\n  }\n}\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\n\nexport default BookForm;"]},"metadata":{},"sourceType":"module"}