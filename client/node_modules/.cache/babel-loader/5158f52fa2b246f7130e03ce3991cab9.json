{"ast":null,"code":"import _classCallCheck from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/media/devmod/main/microverse/react/bookstore-cms/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import axios from'axios';import Book from'../components/book';import{removeBookAction,getBooksAction}from'../actions/index';var BookList=/*#__PURE__*/function(_React$Component){_inherits(BookList,_React$Component);function BookList(){_classCallCheck(this,BookList);return _possibleConstructorReturn(this,_getPrototypeOf(BookList).apply(this,arguments));}_createClass(BookList,[{key:\"UNSAFE_componentWillMount\",value:function UNSAFE_componentWillMount(){this.props.getBooks();}},{key:\"render\",value:function render(){var _this$props=this.props,books=_this$props.books,handleRemoveBook=_this$props.handleRemoveBook;return React.createElement(\"tbody\",null,books.length>0?books.map(function(book){return React.createElement(Book,{key:book.id,item:book,handleRemoval:handleRemoveBook});}):React.createElement(\"tr\",null,React.createElement(\"td\",null,\"Empty List\")));}}]);return BookList;}(React.Component);var displayableBooks=function displayableBooks(books,theFilter){if(theFilter==='All'){return books;}return books.filter(function(item){return item.category===theFilter;});};// inject store state as props to Booklist component\nvar mapStateToProps=function mapStateToProps(state){return{books:displayableBooks(state.books,state.filter)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{handleRemoveBook:function handleRemoveBook(book){axios.delete('api/v1/books/'+book.id).then(function(response){dispatch(removeBookAction(book));});},getBooks:function getBooks(){axios.get('api/v1/books').then(function(response){dispatch(getBooksAction(response.data.map(function(item){var id=item.id,title=item.title,author=item.author,category=item.category;return{id:id,title:title,author:author,category:category};})));});}};};BookList=connect(mapStateToProps,mapDispatchToProps)(BookList);export default BookList;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/client/src/containers/book-list.js"],"names":["React","connect","axios","Book","removeBookAction","getBooksAction","BookList","props","getBooks","books","handleRemoveBook","length","map","book","id","Component","displayableBooks","theFilter","filter","item","category","mapStateToProps","state","mapDispatchToProps","dispatch","delete","then","response","get","data","title","author"],"mappings":"qsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,gBAAT,CAA2BC,cAA3B,KAAiD,kBAAjD,C,GAEMC,CAAAA,Q,4TAGwB,CAC1B,KAAKC,KAAL,CAAWC,QAAX,GACD,C,uCAEQ,iBAC6B,KAAKD,KADlC,CACCE,KADD,aACCA,KADD,CACQC,gBADR,aACQA,gBADR,CAGP,MACE,kCACGD,KAAK,CAACE,MAAN,CAAe,CAAf,CAAmBF,KAAK,CAACG,GAAN,CAAU,SAACC,IAAD,QAC5B,qBAAC,IAAD,EAAM,GAAG,CAAEA,IAAI,CAACC,EAAhB,CAAoB,IAAI,CAAED,IAA1B,CAAgC,aAAa,CAAEH,gBAA/C,EAD4B,EAAV,CAAnB,CAIG,8BACE,2CADF,CALN,CADF,CAYD,C,sBAtBoBV,KAAK,CAACe,S,EAyB7B,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACP,KAAD,CAAQQ,SAAR,CAAsB,CAC7C,GAAIA,SAAS,GAAK,KAAlB,CAAyB,CACvB,MAAOR,CAAAA,KAAP,CACD,CACD,MAAOA,CAAAA,KAAK,CAACS,MAAN,CAAa,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,QAAL,GAAkBH,SAAtB,EAAjB,CAAP,CACD,CALD,CAOA;AACA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLb,KAAK,CAAEO,gBAAgB,CAACM,KAAK,CAACb,KAAP,CAAca,KAAK,CAACJ,MAApB,CADlB,CAAP,CAGD,CAJD,CAMA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCd,gBAAgB,CAAE,0BAACG,IAAD,CAAU,CAC1BX,KAAK,CAACuB,MAAN,CAAa,gBAAkBZ,IAAI,CAACC,EAApC,EAAwCY,IAAxC,CAA6C,SAAAC,QAAQ,CAAI,CACvDH,QAAQ,CAACpB,gBAAgB,CAACS,IAAD,CAAjB,CAAR,CACD,CAFD,EAGD,CALuC,CAMxCL,QAAQ,CAAE,mBAAM,CACdN,KAAK,CAAC0B,GAAN,CAAU,cAAV,EAA0BF,IAA1B,CAA+B,SAAAC,QAAQ,CAAI,CACzCH,QAAQ,CAACnB,cAAc,CAACsB,QAAQ,CAACE,IAAT,CAAcjB,GAAd,CAAkB,SAAAO,IAAI,CAAI,IACxCL,CAAAA,EADwC,CACRK,IADQ,CACxCL,EADwC,CACpCgB,KADoC,CACRX,IADQ,CACpCW,KADoC,CAC7BC,MAD6B,CACRZ,IADQ,CAC7BY,MAD6B,CACrBX,QADqB,CACRD,IADQ,CACrBC,QADqB,CAEhD,MAAO,CAAEN,EAAE,CAAFA,EAAF,CAAMgB,KAAK,CAALA,KAAN,CAAaC,MAAM,CAANA,MAAb,CAAqBX,QAAQ,CAARA,QAArB,CAAP,CACD,CAHuB,CAAD,CAAf,CAAR,CAID,CALD,EAMD,CAbuC,CAAf,EAA3B,CAiBAd,QAAQ,CAAGL,OAAO,CAACoB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAX,CAEA,cAAeA,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Book from '../components/book';\nimport { removeBookAction, getBooksAction } from '../actions/index';\n\nclass BookList extends React.Component {\n\n\n  UNSAFE_componentWillMount() {\n    this.props.getBooks();\n  }\n\n  render() {\n    const { books, handleRemoveBook } = this.props;\n\n    return (\n      <tbody>\n        {books.length > 0 ? books.map((book) => (\n          <Book key={book.id} item={book} handleRemoval={handleRemoveBook} />\n        ))\n          : (\n            <tr>\n              <td>Empty List</td>\n            </tr>\n          )}\n      </tbody>\n    );\n  }\n}\n\nconst displayableBooks = (books, theFilter) => {\n  if (theFilter === 'All') {\n    return books;\n  }\n  return books.filter(item => item.category === theFilter);\n};\n\n// inject store state as props to Booklist component\nconst mapStateToProps = (state) => {\n  return {\n    books: displayableBooks(state.books, state.filter),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleRemoveBook: (book) => {\n    axios.delete('api/v1/books/' + book.id).then(response => {\n      dispatch(removeBookAction(book));\n    })\n  },\n  getBooks: () => {\n    axios.get('api/v1/books').then(response => {\n      dispatch(getBooksAction(response.data.map(item => {\n        const { id, title, author, category } = item;\n        return { id, title, author, category };\n      })));\n    })\n  },\n});\n\n\nBookList = connect(mapStateToProps, mapDispatchToProps)(BookList);\n\nexport default BookList;\n"]},"metadata":{},"sourceType":"module"}