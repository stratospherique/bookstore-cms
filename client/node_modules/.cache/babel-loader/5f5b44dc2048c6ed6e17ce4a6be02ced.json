{"ast":null,"code":"var _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/components/book-form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 0;\n\nclass BookForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.state = {\n      title: '',\n      category: ''\n    };\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const handleAdding = this.props.handleAdding;\n    const book = {\n      id: identifier,\n      title: this.titleInput.value,\n      category: categories[this.categoryValue.options.selectedIndex]\n    };\n    identifier += 1;\n    handleAdding(book);\n    this.titleInput.value = '';\n    this.categoryValue.options.selectedIndex = 0;\n  }\n\n  handleChange() {}\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Book Title\"), React.createElement(\"input\", {\n      ref: node => {\n        this.titleInput = node;\n      },\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ctg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Book Title\"), React.createElement(\"select\", {\n      name: \"category\",\n      id: \"ctg\",\n      ref: node => {\n        this.categoryValue = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, categories.map(item => React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, item)))), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Submit \"));\n  }\n\n} // connect bookForm component to dispatch\n\n\nconst mapDispatchToProps = dispatch => ({\n  handleAdding: book => {\n    dispatch(actions.creatBookAction(book));\n  }\n});\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\nexport default BookForm;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/components/book-form.js"],"names":["React","connect","actions","categories","identifier","BookForm","Component","constructor","props","handleFormSubmit","bind","state","title","category","e","preventDefault","handleAdding","book","id","titleInput","value","categoryValue","options","selectedIndex","handleChange","render","node","map","item","mapDispatchToProps","dispatch","creatBookAction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 0;\n\nclass BookForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.state = {\n      title: '',\n      category: ''\n    }\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { handleAdding } = this.props;\n    const book = {\n      id: identifier,\n      title: this.titleInput.value,\n      category: categories[this.categoryValue.options.selectedIndex],\n    };\n    identifier += 1;\n    handleAdding(book);\n    this.titleInput.value = '';\n    this.categoryValue.options.selectedIndex = 0;\n  }\n\n  handleChange() {\n\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <label htmlFor=\"title\">Book Title</label>\n          <input ref={(node) => { this.titleInput = node; }} onChange={this.handleChange} type=\"text\" id=\"title\" />\n        </div>\n        <div>\n          <label htmlFor=\"ctg\">Book Title</label>\n          <select name=\"category\" id=\"ctg\" ref={(node) => { this.categoryValue = node; }}>\n            {categories.map((item) => <option key={item} value={item}>{item}</option>)}\n          </select>\n        </div>\n        <button type=\"submit\" onClick={this.handleFormSubmit}> Submit </button>\n      </form>\n    );\n  }\n}\n\n// connect bookForm component to dispatch\nconst mapDispatchToProps = (dispatch) => ({\n  handleAdding: (book) => {\n    dispatch(actions.creatBookAction(book));\n  },\n});\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}