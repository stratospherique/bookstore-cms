{"ast":null,"code":"var _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/components/category-filter.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilterAction } from '../actions/index';\nimport { FilterContainer, StyledText } from './styled-components';\nconst filterOptions = ['All', 'Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n\nclass CategoryFilter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFilterChange = e => {\n      const handleFiltering = this.props.handleFiltering;\n      handleFiltering(e.target.value);\n    };\n  }\n\n  render() {\n    return React.createElement(FilterContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(StyledText, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Filter By:\"), React.createElement(\"select\", {\n      onChange: this.handleFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, filterOptions.map(filter => React.createElement(\"option\", {\n      key: filter,\n      value: filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, filter))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  handleFiltering: filter => {\n    dispatch(changeFilterAction(filter));\n  }\n});\n\nCategoryFilter = connect(null, mapDispatchToProps)(CategoryFilter);\nexport default CategoryFilter;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/components/category-filter.js"],"names":["React","connect","changeFilterAction","FilterContainer","StyledText","filterOptions","CategoryFilter","Component","handleFilterChange","e","handleFiltering","props","target","value","render","map","filter","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,qBAA5C;AAEA,MAAMC,aAAa,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,WAAlB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,UAA5D,EAAwE,QAAxE,CAAtB;;AAEA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAC3CC,kBAD2C,GACrBC,CAAD,IAAO;AAAA,YAClBC,eADkB,GACE,KAAKC,KADP,CAClBD,eADkB;AAE1BA,MAAAA,eAAe,CAACD,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AACD,KAJ0C;AAAA;;AAM3CC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAKE;AAAQ,MAAA,QAAQ,EAAE,KAAKN,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,aAAa,CAACU,GAAd,CAAmBC,MAAD,IACjB;AAAQ,MAAA,GAAG,EAAEA,MAAb;AAAqB,MAAA,KAAK,EAAEA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,MAArC,CADD,CADH,CALF,CADF;AAaD;;AApB0C;;AAuB7C,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCR,EAAAA,eAAe,EAAGM,MAAD,IAAY;AAC3BE,IAAAA,QAAQ,CAAChB,kBAAkB,CAACc,MAAD,CAAnB,CAAR;AACD;AAHuC,CAAf,CAA3B;;AAMAV,cAAc,GAAGL,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCX,cAAlC,CAAjB;AAEA,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilterAction } from '../actions/index';\nimport { FilterContainer, StyledText } from './styled-components';\n\nconst filterOptions = ['All', 'Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n\nclass CategoryFilter extends React.Component {\n  handleFilterChange = (e) => {\n    const { handleFiltering } = this.props;\n    handleFiltering(e.target.value);\n  }\n\n  render() {\n    return (\n      <FilterContainer>\n        <StyledText\n          size=\"small\">\n          Filter By:\n        </StyledText>\n        <select onChange={this.handleFilterChange}>\n          {filterOptions.map((filter) => (\n            <option key={filter} value={filter}>{filter}</option>\n          ))}\n        </select>\n      </FilterContainer>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleFiltering: (filter) => {\n    dispatch(changeFilterAction(filter));\n  },\n});\n\nCategoryFilter = connect(null, mapDispatchToProps)(CategoryFilter);\n\nexport default CategoryFilter;\n"]},"metadata":{},"sourceType":"module"}