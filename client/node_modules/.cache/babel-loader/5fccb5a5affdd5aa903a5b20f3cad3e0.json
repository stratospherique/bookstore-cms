{"ast":null,"code":"var _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/components/category-filter.js\";\nimport React from 'react';\nimport changeFilterAction from '../actions/index';\nconst filterOptions = ['All', 'Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n\nclass CategoryFilter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFilterChange = e => {\n      const handleFiltering = this.props.handleFiltering;\n      handleFiltering(e.target.value);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, filterOptions.map((filter, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: filter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, filter);\n    })));\n  }\n\n}\n\nmapDispatchToProps = dispatch => ({\n  handleFiltering: filter => {\n    dispatch(changeFilterAction(filter));\n  }\n});\n\nexport default CategoryFilter;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/components/category-filter.js"],"names":["React","changeFilterAction","filterOptions","CategoryFilter","Component","handleFilterChange","e","handleFiltering","props","target","value","render","map","filter","index","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;AAEA,MAAMC,aAAa,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,WAAlB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,UAA5D,EAAwE,QAAxE,CAAtB;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAE3CC,kBAF2C,GAErBC,CAAD,IAAO;AAAA,YAClBC,eADkB,GACE,KAAKC,KADP,CAClBD,eADkB;AAE1BA,MAAAA,eAAe,CAACD,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AACD,KAL0C;AAAA;;AAM3CC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,QAAQ,EAAE,KAAKN,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,aAAa,CAACU,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpC,aACE;AAAQ,QAAA,GAAG,EAAEA,KAAb;AAAoB,QAAA,KAAK,EAAED,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCA,MAApC,CADF;AAGD,KAJA,CADH,CADF,CADF;AAWD;;AAlB0C;;AAqB7CE,kBAAkB,GAAIC,QAAD,KAAe;AAClCT,EAAAA,eAAe,EAAGM,MAAD,IAAY;AAC3BG,IAAAA,QAAQ,CAACf,kBAAkB,CAACY,MAAD,CAAnB,CAAR;AACD;AAHiC,CAAf,CAArB;;AAMA,eAAeV,cAAf","sourcesContent":["import React from 'react';\nimport changeFilterAction from '../actions/index';\n\nconst filterOptions = ['All', 'Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n\nclass CategoryFilter extends React.Component {\n\n  handleFilterChange = (e) => {\n    const { handleFiltering } = this.props;\n    handleFiltering(e.target.value);\n  }\n  render() {\n    return (\n      <div>\n        <select onChange={this.handleFilterChange}>\n          {filterOptions.map((filter, index) => {\n            return (\n              <option key={index} value={filter}>{filter}</option>\n            )\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n\nmapDispatchToProps = (dispatch) => ({\n  handleFiltering: (filter) => {\n    dispatch(changeFilterAction(filter));\n  }\n})\n\nexport default CategoryFilter;"]},"metadata":{},"sourceType":"module"}