{"ast":null,"code":"var _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/components/book-form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { creatBookAction, removeBookAction } from '../actions/index';\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 0;\n\nclass BookForm extends React.Component {\n  constructor(props) {\n    super(props); //this.handleFormSubmit = this.handleFormSubmit.bind(this);\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      const handleAdding = this.props.handleAdding;\n      const book = {\n        id: identifier,\n        title: this.titleInput.value,\n        category: categories[this.categoryValue.options.selectedIndex]\n      };\n      identifier += 1;\n      handleAdding(book);\n      this.titleInput.value = '';\n      this.categoryValue.options.selectedIndex = 0;\n    };\n\n    this.state = {\n      title: '',\n      category: ''\n    };\n  }\n\n  handleChange(e) {}\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Book Title\"), React.createElement(\"input\", {\n      ref: node => {\n        this.titleInput = node;\n      },\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ctg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Book Category\"), React.createElement(\"select\", {\n      name: \"category\",\n      id: \"ctg\",\n      ref: node => {\n        this.categoryValue = node;\n      },\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, categories.map(item => React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, item)))), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Submit \"));\n  }\n\n} // connect bookForm component to dispatch\n\n\nconst mapDispatchToProps = dispatch => ({\n  handleAdding: book => {\n    dispatch(creatBookAction(book));\n  }\n});\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\nexport default BookForm;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/components/book-form.js"],"names":["React","connect","creatBookAction","removeBookAction","categories","identifier","BookForm","Component","constructor","props","handleFormSubmit","e","preventDefault","handleAdding","book","id","title","titleInput","value","category","categoryValue","options","selectedIndex","state","handleChange","render","node","map","item","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { creatBookAction, removeBookAction } from '../actions/index';\n\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 0;\n\nclass BookForm extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.state = {\n      title: '',\n      category: ''\n    }\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const { handleAdding } = this.props;\n    const book = {\n      id: identifier,\n      title: this.titleInput.value,\n      category: categories[this.categoryValue.options.selectedIndex],\n    };\n    identifier += 1;\n    handleAdding(book);\n    this.titleInput.value = '';\n    this.categoryValue.options.selectedIndex = 0;\n  }\n\n  handleChange(e) {\n\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <div>\n          <label htmlFor=\"title\">Book Title</label>\n          <input ref={(node) => { this.titleInput = node; }} onChange={this.handleChange} type=\"text\" id=\"title\" />\n        </div>\n        <div>\n          <label htmlFor=\"ctg\">Book Category</label>\n          <select name=\"category\" id=\"ctg\" ref={(node) => { this.categoryValue = node; }} onChange={this.handleChange}>\n            {categories.map((item) => <option key={item} value={item}>{item}</option>)}\n          </select>\n        </div>\n        <button type=\"submit\" > Submit </button>\n      </form>\n    );\n  }\n}\n\n// connect bookForm component to dispatch\nconst mapDispatchToProps = (dispatch) => ({\n  handleAdding: (book) => {\n    dispatch(creatBookAction(book));\n  },\n});\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}