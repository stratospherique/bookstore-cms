{"ast":null,"code":"var _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/containers/book-list.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Book from '../components/book';\n\nlet BookList = ({\n  books\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"BookID\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"Title\"), React.createElement(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"Category\"))), React.createElement(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, books.length > 0 ? books.map(book => {\n  return React.createElement(Book, {\n    key: book.id,\n    item: book,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n}) : React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Empty List\"), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}))))); // inject store state as props to Booklist component\n\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nBookList = connect(mapStateToProps, null)(BookList);\nexport default BookList;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/containers/book-list.js"],"names":["React","connect","Book","BookList","books","length","map","book","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,IAAIC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmBD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACtC,SAAO,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFmB,CAAnB,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAJ,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAb,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhC,CAHP,CARF,CADF,CADF,C,CAmBA;;;AACA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,KAAK,EAAEM,KAAK,CAACN;AADqB,CAAZ,CAAxB;;AAIAD,QAAQ,GAAGF,OAAO,CAACQ,eAAD,EAAkB,IAAlB,CAAP,CAA+BN,QAA/B,CAAX;AAEA,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Book from '../components/book';\n\nlet BookList = ({ books }) => (\n  <div>\n    <table>\n      <thead>\n        <tr>\n          <th>BookID</th>\n          <th>Title</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        {books.length > 0 ? books.map((book) => {\n          return <Book key={book.id} item={book} />\n        }) : <tr><td></td><td>Empty List</td><td></td></tr>}\n      </tbody>\n    </table>\n  </div>\n);\n\n// inject store state as props to Booklist component\nconst mapStateToProps = (state) => ({\n  books: state.books\n})\n\nBookList = connect(mapStateToProps, null)(BookList)\n\nexport default BookList"]},"metadata":{},"sourceType":"module"}