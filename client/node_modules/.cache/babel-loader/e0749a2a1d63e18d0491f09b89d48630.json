{"ast":null,"code":"import axios from 'axios';\n\nconst creatBookAction = book => ({\n  type: 'CREATE_BOOK',\n  book\n});\n\nconst removeBookAction = book => ({\n  type: 'REMOVE_BOOK',\n  id: book.id\n});\n\nconst getBooksAction = () => {\n  let request;\n  axios.get('api/v1/books').then(response => {\n    request = response.data;\n  }).catch(error => {\n    request = [];\n    console.error('shit');\n  });\n  return {\n    type: 'GET_BOOKS',\n    books: request\n  };\n};\n\nconst changeFilterAction = filter => ({\n  type: 'CHANGE_FILTER',\n  filter\n});\n\nexport { creatBookAction, removeBookAction, changeFilterAction, getBooksAction };","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/client/src/actions/index.js"],"names":["axios","creatBookAction","book","type","removeBookAction","id","getBooksAction","request","get","then","response","data","catch","error","console","books","changeFilterAction","filter"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAIC,IAAD,KAAW;AACjCC,EAAAA,IAAI,EAAE,aAD2B;AAEjCD,EAAAA;AAFiC,CAAX,CAAxB;;AAKA,MAAME,gBAAgB,GAAIF,IAAD,KAAW;AAClCC,EAAAA,IAAI,EAAE,aAD4B;AAElCE,EAAAA,EAAE,EAAEH,IAAI,CAACG;AAFyB,CAAX,CAAzB;;AAKA,MAAMC,cAAc,GAAG,MAAM;AAC3B,MAAIC,OAAJ;AACAP,EAAAA,KAAK,CAACQ,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAA+BC,QAAQ,IAAI;AACzCH,IAAAA,OAAO,GAAGG,QAAQ,CAACC,IAAnB;AACD,GAFD,EAGGC,KAHH,CAGSC,KAAK,IAAI;AACdN,IAAAA,OAAO,GAAG,EAAV;AACAO,IAAAA,OAAO,CAACD,KAAR,CAAc,MAAd;AACD,GANH;AAOA,SAAO;AACLV,IAAAA,IAAI,EAAE,WADD;AAELY,IAAAA,KAAK,EAAER;AAFF,GAAP;AAID,CAbD;;AAeA,MAAMS,kBAAkB,GAAIC,MAAD,KAAa;AACtCd,EAAAA,IAAI,EAAE,eADgC;AAEtCc,EAAAA;AAFsC,CAAb,CAA3B;;AAKA,SAAShB,eAAT,EAA0BG,gBAA1B,EAA4CY,kBAA5C,EAAgEV,cAAhE","sourcesContent":["import axios from 'axios';\n\nconst creatBookAction = (book) => ({\n  type: 'CREATE_BOOK',\n  book,\n});\n\nconst removeBookAction = (book) => ({\n  type: 'REMOVE_BOOK',\n  id: book.id,\n});\n\nconst getBooksAction = () => {\n  let request;\n  axios.get('api/v1/books').then(response => {\n    request = response.data;\n  })\n    .catch(error => {\n      request = [];\n      console.error('shit');\n    })\n  return {\n    type: 'GET_BOOKS',\n    books: request,\n  }\n}\n\nconst changeFilterAction = (filter) => ({\n  type: 'CHANGE_FILTER',\n  filter,\n});\n\nexport { creatBookAction, removeBookAction, changeFilterAction, getBooksAction };\n"]},"metadata":{},"sourceType":"module"}