{"ast":null,"code":"import _defineProperty from \"/media/devmod/main/microverse/react/bookstore-cms/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/media/devmod/main/microverse/react/bookstore-cms/src/components/book-form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { creatBookAction } from '../actions/index';\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 0;\n\nclass BookForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      const handleAdding = this.props.handleAdding;\n      handleAdding(_objectSpread({\n        id: identifier\n      }, this.state));\n      identifier += 1;\n      this.setState({\n        title: '',\n        category: 'Action'\n      });\n      e.target.reset();\n    };\n\n    this.handleChange = e => {\n      e.persist();\n      const target = e.target;\n\n      switch (target.localName) {\n        case 'input':\n          this.setState(state => ({\n            title: target.value,\n            category: state.category\n          }));\n          break;\n\n        default:\n          this.setState(state => ({\n            title: state.title,\n            category: target.value\n          }));\n          break;\n      }\n    };\n\n    this.state = {\n      title: '',\n      category: 'Action'\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Book Title\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      id: \"title\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ctg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Book Category\"), React.createElement(\"select\", {\n      name: \"category\",\n      id: \"ctg\",\n      onChange: this.handleChange,\n      value: this.state.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, categories.map(item => React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, item)))), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Submit \"));\n  }\n\n} // connect bookForm component to dispatch\n\n\nconst mapDispatchToProps = dispatch => ({\n  handleAdding: book => {\n    dispatch(creatBookAction(book));\n  }\n});\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\nexport default BookForm;","map":{"version":3,"sources":["/media/devmod/main/microverse/react/bookstore-cms/src/components/book-form.js"],"names":["React","connect","creatBookAction","categories","identifier","BookForm","Component","constructor","props","handleFormSubmit","e","preventDefault","handleAdding","id","state","setState","title","category","target","reset","handleChange","persist","localName","value","render","map","item","mapDispatchToProps","dispatch","book"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { creatBookAction } from '../actions/index';\n\nconst categories = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nlet identifier = 0;\n\nclass BookForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: 'Action',\n    };\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const { handleAdding } = this.props;\n    handleAdding({ id: identifier, ...this.state });\n    identifier += 1;\n    this.setState({\n      title: '',\n      category: 'Action',\n    });\n    e.target.reset();\n  }\n\n  handleChange = (e) => {\n    e.persist();\n    const { target } = e;\n    switch (target.localName) {\n      case 'input':\n        this.setState((state) => ({\n          title: target.value,\n          category: state.category,\n        }));\n        break;\n      default:\n        this.setState((state) => ({\n          title: state.title,\n          category: target.value,\n        }));\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <div>\n          <label htmlFor=\"title\">Book Title</label>\n          <input onChange={this.handleChange} type=\"text\" id=\"title\" value={this.state.title} />\n        </div>\n        <div>\n          <label htmlFor=\"ctg\">Book Category</label>\n          <select name=\"category\" id=\"ctg\" onChange={this.handleChange} value={this.state.category}>\n            {categories.map((item) => <option key={item} value={item}>{item}</option>)}\n          </select>\n        </div>\n        <button type=\"submit\"> Submit </button>\n      </form>\n    );\n  }\n}\n\n// connect bookForm component to dispatch\nconst mapDispatchToProps = (dispatch) => ({\n  handleAdding: (book) => {\n    dispatch(creatBookAction(book));\n  },\n});\n\nBookForm = connect(null, mapDispatchToProps)(BookForm);\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}